
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from config import config
from keyboards import countries_kb, cities_kb, cancel_kb
from services.weather_api import WeatherAPI

router = Router()

class States(StatesGroup):
    waiting_city = State()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "–í—ñ—Ç–∞—é! –Ø –±–æ—Ç –ø–æ–≥–æ–¥–∏. –û–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É:",
        reply_markup=countries_kb()
    )

@router.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        "üõ† –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
        "/start ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\n"
        "/help ‚Äî –î–æ–ø–æ–º–æ–≥–∞ / —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n\n"
        "–ê–±–æ –ø—Ä–æ—Å—Ç–æ –æ–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É —ñ –º—ñ—Å—Ç–æ –∑ –º–µ–Ω—é ‚¨áÔ∏è"
    )

@router.callback_query(F.data.startswith("country_"))
async def country_selected(callback: types.CallbackQuery):
    country = callback.data.split("_", 1)[1]
    await callback.message.edit_text(
        f"–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ –≤ {country}:",
        reply_markup=cities_kb(country)
    )
    await callback.answer()

@router.callback_query(F.data.startswith("city_"))
async def city_selected(callback: types.CallbackQuery):
    city = callback.data.split("_", 1)[1]
    weather_data = await WeatherAPI.get_weather(city)

    if weather_data:
        await callback.message.edit_text(
            WeatherAPI.format_weather(weather_data),
            reply_markup=countries_kb()
        )
    else:
        await callback.message.edit_text(
            "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É",
            reply_markup=countries_kb()
        )
    await callback.answer()

@router.callback_query(F.data == "manual_city")
async def manual_city(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞ (–Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ–π –º–æ–≤—ñ –∑ –≤–µ–ª–∏–∫–æ—ó –±—É–∫–≤–∏. –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: Berlin):"
    )
    await state.set_state(States.waiting_city)
    await callback.answer()

@router.message(States.waiting_city, F.text == "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")
async def cancel_input(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "–û–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É:",
        reply_markup=countries_kb(),
        reply_markup_remove=True
    )

@router.message(States.waiting_city)
async def city_entered(message: types.Message, state: FSMContext):
    weather_data = await WeatherAPI.get_weather(message.text)

    if weather_data:
        await message.answer(
            WeatherAPI.format_weather(weather_data),
            reply_markup=countries_kb()
        )
        await state.clear()
    else:
        await message.answer(
            "–ú—ñ—Å—Ç–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:",
            reply_markup=cancel_kb
        )

@router.callback_query(F.data == "back")
async def back_to_countries(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "–û–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É:",
        reply_markup=countries_kb()
    )
    await callback.answer()
